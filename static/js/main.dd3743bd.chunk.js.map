{"version":3,"sources":["Assets/cloud-computing.svg","Assets/logo.svg","RequestController/urls.js","RequestController/RequestHelper.js","RequestController/MockEndpoints.js","RequestController/RequestController.js","MapView/MapView.js","Sidebar/Feed/FeedItem.js","Sidebar/Feed/Feed.js","Sidebar/Feed/Form.js","Sidebar/Sidebar.js","MainApp/MainApp.js","Navbar/DropdownMenu.js","Navbar/PlacesNavbar.js","About/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","URLS","submit","view","count","type","RequestHelper","getCount","upperLeft","bottomRight","axios","post","latlng1","latlng2","headers","skip","pagelimit","text","coordinate","file","form","FormData","append","Date","toGMTString","_","require","RequestDispatcher","Promise","resolve","reject","data","pageLimit","results","textInputs","imageUrls","i","random","length","image_url","push","storyid","lat","long","timestamp","entries","slice","Math","min","status","RequestController","MapView","props","map","undefined","state","currentZoom","this","leafletElement","on","setState","getZoom","e","updateLatLngFunc","latlng","wrap","lng","southWestBounds","getBounds","getSouthWest","northEastBounds","getNorthEast","x","Number","then","res","updateCurrentDataPoints","updateBoundingBox","catch","err","console","log","Map","ref","onClick","handleClick","bind","center","mapCenter","zoom","style","height","width","TileLayer","attribution","url","markers","filter","b","selectedStory","marker","Marker","key","position","onStoryClick","Popup","alt","src","className","mode","Button","handleViewClick","React","Component","ActiveMarker","openPopup","useStyles","makeStyles","card","maxWidth","borderStyle","borderWidth","boxShadow","borderColor","marginBottom","cursor","media","paddingTop","headerTitle","fontSize","subHeader","color","id","right","fontStyle","marginLeft","marginRight","MediaCard","classes","Card","selected","story","CardHeader","title","toFixed","subheader","toLocaleString","CardMedia","image","CardContent","Typography","variant","component","CardActions","EmptyFeed","Feed","myRef","createRef","current","scrollIntoView","behavior","block","elements","CustomForm","description","showToast","fileUpload","target","files","curLatLng","value","latLngSelected","hasDescription","hasFile","Toast","top","left","zIndex","onClose","show","delay","autohide","Header","toastLogo","Body","Form","Group","Control","onChange","updateDescription","placeholder","accept","handleFileSelection","disabled","buttonEnabled","handleSubmit","PAGE_LIMIT","Sidebar","handlePageClick","pageNum","updateMode","newMode","updateModeFunc","render","name","options","label","default","setValue","textAlign","feed","pageCount","forcePage","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","breakClassName","breakLinkClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","prevProps","prevUpperLeft","prevBottomRight","ceil","MainApp","currentData","boundingBox","selectedStoryId","storyId","Row","Col","md","DropdownMenu","useState","open","setOpen","anchorRef","useRef","handleClose","event","contains","updatePageIdFunc","handleListKeyDown","preventDefault","prevOpen","useEffect","focus","aria-controls","aria-haspopup","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","backgroundColor","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","MenuItem","PlacesNavbar","Navbar","bg","logo","Brand","About","App","pageId","updatePageId","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dd3743bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cloud-computing.d0a767f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.c1f4f2ad.svg\";","const URLS = {\n    //  URLS go here\n    submit: 'http://18.218.210.185:1330/submit',\n    view: 'http://18.218.210.185:1330/view',\n    count: 'http://18.218.210.185:1330/count',\n    type: 'real'        //  'real' to use actual enpoints\n}\nexport default URLS;\n","import axios from 'axios';\nimport URLS from './urls';\n// import FormData from 'form-data';\n\n\nconst RequestHelper = {\n    getCount: (upperLeft, bottomRight) => {\n        return axios.post(URLS.count,\n            {\n                latlng1: upperLeft,\n                latlng2: bottomRight,\n\n            },\n            {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n    },\n    view: (upperLeft, bottomRight, skip, pagelimit) => {\n        return axios.post(URLS.view,\n            {\n                latlng1: upperLeft,\n                latlng2: bottomRight,\n                skip,\n                pagelimit\n            },\n            {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }\n        );\n    },\n    submit: (text, coordinate, file) => {\n        const form = new FormData();\n        form.append('text', text);\n        form.append('lat', coordinate[0]);\n        form.append('lng', coordinate[1]);\n        form.append('timestamp', new Date().toGMTString());\n\n        if (file === null) {\n            form.append('file', null);\n        }\n        else {      //  file exists\n            form.append('file', file);\n        }\n        return axios.post(URLS.submit, form, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        });\n    }\n}\nexport default RequestHelper;","const _ = require(\"lodash\")\nconst NUM_STORIES = 100;\nconst MockEndpoints = {\n    getCount: (upperLeft, bottomRight) => {\n        return new Promise((resolve, reject) => {\n            resolve({ data: { count: NUM_STORIES } })\n        });\n    },\n    view: (upperLeft, bottomRight, skip, pageLimit) => {\n        const results = [];\n        const textInputs = [\"Hey, I'm at Rice! Please look at my story.\", \"What's up guys?  Places.io is so cool!  Good job COMP 413 Blue Team.\", \"Check out my story guys please be careful !!\", \"Rice University is a comprehensive research university located on a 300-acre tree-lined campus in Houston, Texas. Rice produces the next generation of leaders and advances tomorrow’s thinking.\"];\n        const imageUrls = [\n            \"https://cdn.shopify.com/s/files/1/3004/1474/products/orange-tabby_1800x1800.png?v=1544042837\",\n            \"https://images.pexels.com/photos/1108099/pexels-photo-1108099.jpeg?cs=srgb&dl=adorable-animal-breed-1108099.jpg&fm=jpg\", \"https://avatars1.githubusercontent.com/u/23466848?s=400&v=4\",\n            \"https://tribkswb.files.wordpress.com/2018/09/s098916860.jpg?quality=85&strip=all&w=1540\",\n            null,     //  to test how stories without images might look\n            null,\n            null\n        ];\n        for (let i = 0; i < NUM_STORIES; i++) {\n            const text = textInputs[_.random(0, textInputs.length - 1)];\n            const image_url = imageUrls[_.random(0, imageUrls.length - 1)]\n            results.push({\n                storyid: i,\n                lat: _.random(upperLeft[0], bottomRight[0], true),\n                long: _.random(upperLeft[1], bottomRight[1], true),\n                image_url,\n                text,\n                timestamp: new Date().toGMTString()\n            });\n        }\n        return new Promise((resolve, reject) => {\n            resolve({\n                data: {\n                    entries: results.slice(skip, Math.min(results.length, skip + pageLimit))\n                }\n            });\n        });\n    },\n    submit: (text, coordinate, file) => {\n        return new Promise((resolve, reject) => {\n            resolve({\n                status: 'Mock submit success'\n            });\n        });\n    }\n}\nexport default MockEndpoints;","import URLS from './urls';\nimport RequestHelper from './RequestHelper';\nimport MockEndpoints from './MockEndpoints';\nconst RequestDispatcher = URLS.type === 'mock' ? MockEndpoints : RequestHelper;\nconst RequestController = {\n    getCount: (upperLeft, bottomRight) => {\n        return RequestDispatcher.getCount(upperLeft, bottomRight);\n    },\n    view: (upperLeft, bottomRight, skip, pagelimit) => {\n        return RequestDispatcher.view(upperLeft, bottomRight, skip, pagelimit);\n    },\n    submit: (text, coordinate, file) => {\n        return RequestDispatcher.submit(text, coordinate, file);\n    }\n};\n\nexport default RequestController;","import React from 'react';\nimport '../App.css';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\n\n// import RequestHelper from '../RequestHelper';\nimport Control from 'react-leaflet-control';\nimport Button from 'react-bootstrap/Button';\n// import MockEndpoints from '../RequestController/MockEndpoints';\nimport RequestController from '../RequestController/RequestController';\nconst PAGE_LIMIT = 10;\n\nclass MapView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.map = undefined;\n        this.state = {\n            currentZoom: 10\n        };\n    }\n    \n    componentDidMount() {\n        this.map.leafletElement.on('zoomend', () => {\n            this.setState({ currentZoom: this.map.leafletElement.getZoom() });\n        });\n    }\n\n    handleClick(e) {\n        this.props.updateLatLngFunc({ lat: e.latlng.wrap().lat, lng: e.latlng.wrap().lng });\n    }\n\n    handleViewClick() {\n        const southWestBounds = this.map.leafletElement.getBounds().getSouthWest().wrap();\n        const northEastBounds = this.map.leafletElement.getBounds().getNorthEast().wrap();\n        const upperLeft = [northEastBounds.lat, southWestBounds.lng].map(x => Number(x));\n        const bottomRight = [southWestBounds.lat, northEastBounds.lng].map(x => Number(x));\n\n        RequestController.view(upperLeft, bottomRight, 0, PAGE_LIMIT)\n            .then(res => {\n                this.props.updateCurrentDataPoints(res.data.entries);\n                this.props.updateBoundingBox(upperLeft, bottomRight);\n            })\n            .catch(err => console.log(err));\n    }\n\n    mapCenter() {\n        const riceCampusCoordinate = [29.749907, -95.358421]\n        return riceCampusCoordinate\n    }\n\n    render() {\n        return (\n            <Map ref={(ref) => { this.map = ref; }} onClick={(this.handleClick.bind(this))} center={this.mapCenter()} zoom={10}\n                style={{ height: '90vh', width: '100%' }}>\n                <TileLayer\n                    attribution='&amp;copy <a href=\"https://github.com/rice-comp413-blue/places.io\">BlueTeam</a> | places.io'\n                    url=\"https://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png\"\n                />\n\n                {this.props.markers.filter((b) => b.storyid !== this.props.selectedStory).map(marker => {\n                    return (\n                        <Marker\n                            key={marker.storyid}\n                            position={[marker.lat, marker.long]}\n                            onClick={() => this.props.onStoryClick(marker.storyid)}\n                        >\n                            <Popup>\n                                <h5>Description</h5><br /> {marker.text}\n                                {marker.image_url ? <img alt=\"Story\" src={marker.image_url} style={{ height: '100px' }} /> : <p className=\"missing\">No image attached.</p>}\n                                <p>Story Id: {marker.storyid}</p>\n                            </Popup>\n                        </Marker>\n                    )\n\n                })}\n\n                {/*The active marker needs to be placed last in order for it to show. There should only be 1.*/}\n\n                {this.props.markers.filter((b) => b.storyid === this.props.selectedStory).map(marker => {\n                    return (\n                        <ActiveMarker\n                            key={marker.storyid}\n                            position={[marker.lat, marker.long]}>\n                            <Popup>\n                                <div>{marker.text} </div><br />\n                                {marker.image_url ? <img alt=\"Story\" src={marker.image_url} style={{ height: '100px' }} /> : <p className=\"missing\">No image attached.</p>}\n                                <p>Story Id: {marker.storyid}</p>\n                            </Popup>\n                        </ActiveMarker>\n                    )\n\n                })}\n\n                {this.props.mode === 'view' && this.state.currentZoom > 6 ?\n                    <Control position=\"topright\" >\n                        <Button onClick={this.handleViewClick.bind(this)}>\n                            Query\n                        </Button>\n                    </Control>\n                    : null}\n            </Map>\n        );\n    }\n}\nconst ActiveMarker = props => {\n    const initMarker = ref => {\n        if (ref) {\n            ref.leafletElement.openPopup()\n        }\n    }\n    return <Marker ref={initMarker} {...props} />\n}\n\nexport default MapView;","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(() => ({\n  card: {\n    maxWidth: 1000,\n    borderStyle: 'solid',\n    borderWidth: '0.5px',\n    boxShadow: '3px 3px 5px grey',\n    borderColor: 'grey',\n    marginBottom: '1em',\n    cursor: 'pointer'\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  headerTitle: {\n    fontSize: '0.65em'\n  },\n  subHeader: {\n    fontSize: '0.85em'\n  },\n  text: {\n    color: 'black'\n  },\n  id: {\n    fontSize: '0.6em',\n    right: 0,\n    fontStyle: 'italic',\n    marginLeft: 'auto',\n    marginRight: 0,\n    color: 'grey'\n  }\n}));\n\nexport default function MediaCard(props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card} style={props.selected ? { 'borderWidth': '5px' } : undefined} onClick={() => props.onStoryClick(props.story.storyid)}>\n      <CardHeader\n        title={\n          <div className={classes.headerTitle}>\n            {`Location: (${props.story.lat.toFixed(4)}, ${props.story.long.toFixed(4)})`}\n          </div>\n        }\n        subheader={\n          <div className={classes.subHeader}>\n            {new Date(props.story.timestamp).toLocaleString('en-US')}\n          </div>}\n      />\n\n      {props.story.image_url ?\n        <CardMedia\n          className={classes.media}\n          image={props.story.image_url}\n          title=\"Story Image\"\n        /> :\n        null\n      }\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"div\">\n          <div className={classes.text}>{props.story.text}</div>\n        </Typography>\n      </CardContent>\n\n      <CardActions>\n        <div className={classes.id}>{`Story ID: ${props.story.storyid}`}</div>\n      </CardActions>\n\n\n\n    </Card>\n\n  );\n}\n\n// const FeedItem = (props) => {\n//     return (\n//         <div className=\"feedItem\">\n//             <p>ID: {props.story.storyid}</p>\n//             <p>Text: {props.story.text}</p>\n//             <p>Location: ({props.story.lat}, {props.story.long})</p>\n//             <p>Timestamp: {props.story.timestamp.toString()}</p>\n//         </div>\n//     );\n// };\n\n// export default FeedItem\n\n\n","import React from 'react';\nimport FeedItem from './FeedItem'\n\nconst EmptyFeed = (props) => {\n    return (\n        <p className=\"missing\">Empty feed — make a view request!</p>\n    )\n}\n\nexport default class Feed extends React.Component {\n    constructor(props) {\n        super(props)\n        this.myRef = React.createRef()\n    }\n\n    componentDidUpdate() {\n        if (this.myRef.current) {\n            this.myRef.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n        }\n    }\n\n    render() {\n        return (\n            <div className={this.props.className}>\n                {this.props.elements.length > 0 ?\n                    this.props.elements.map(x => <div key={x.storyid} ref={x.storyid === this.props.selectedStory ? this.myRef : React.createRef()}><FeedItem story={x} onStoryClick={this.props.onStoryClick} selected={x.storyid === this.props.selectedStory} /></div>) :\n                    <EmptyFeed />\n                }\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport RequestController from '../../RequestController/RequestController';\nimport Button from 'react-bootstrap/Button';\nimport Toast from 'react-bootstrap/Toast';\nimport toastLogo from '../../Assets/cloud-computing.svg'\n\nexport default class CustomForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            description: '',\n            file: null,\n            showToast: false\n        }\n        this.fileUpload = null;     //  need a handle to the file upload DOM node to reset it after submission\n    }\n\n    handleFileSelection(e) {\n        this.setState({\n            file: e.target.files[0]\n        });\n    }\n\n    handleSubmit(e) {\n        RequestController.submit(this.state.description, this.props.curLatLng, this.state.file)\n            .then(res => console.log(res))\n            .catch(err => console.log(err));\n\n        this.setState({ description: '', file: null, showToast: true });\n        // reset lat and lng\n        this.props.updateLatLngFunc({ lat: 0, lng: 0 });\n        this.fileUpload.value = '';\n    }\n\n    updateDescription(e) {\n        this.setState({ description: e.target.value });\n    }\n\n\n    buttonEnabled() {\n        const latLngSelected = this.props.curLatLng[0] !== null && this.props.curLatLng[1] != null;\n        const hasDescription = this.state.description !== '';\n        const hasFile = this.state.file !== null;\n        return latLngSelected && (hasDescription || hasFile);\n    }\n\n    render() {\n        return (\n            <div>\n                <div >Selected point: ({this.props.curLatLng[0].toFixed(4)} {this.props.curLatLng[1].toFixed(4)})</div>\n                <Toast style={{ position: 'absolute', top: '20em', left: '3em', zIndex: 999 }} onClose={() => this.setState({ showToast: false })} show={this.state.showToast} delay={4000} autohide>\n                    <Toast.Header>\n                        <img\n                            src=\"holder.js/20x20?text=%20\"\n                            className=\"rounded mr-2\"\n                            alt=\"\"\n                        />\n                        <strong className=\"mr-auto\">\n                            <img style={{ height: '2em', width: '2em' }} src={toastLogo} alt=\"logo\"></img> Thank you for your submission. </strong>\n                        <small>0s ago</small>\n                    </Toast.Header>\n                    <Toast.Body>We've added your post to our database of places :)</Toast.Body>\n                </Toast>\n                <Form>\n                    <Form.Group >\n                        {/* <Form.Label>Description:</Form.Label> */}\n                        <Form.Control\n                            value={this.state.description}\n                            onChange={this.updateDescription.bind(this)}\n                            type=\"text\"\n                            placeholder=\"Enter a description\" />\n                    </Form.Group>\n\n                    <div>\n                        <input\n                            type=\"file\"\n                            accept=\"image/*\"\n                            id=\"fileinput\"\n                            onChange={this.handleFileSelection.bind(this)}\n                            ref={(ref) => this.fileUpload = ref}\n\n                        />\n                    </div>\n\n                    <br />\n\n                    <Button\n                        disabled={!this.buttonEnabled()}\n                        variant=\"primary\"\n                        onClick={this.handleSubmit.bind(this)}\n                        title=\"Select a point on the map first.\">\n                        Submit\n                    </Button>\n                </Form>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Feed from './Feed/Feed';\nimport Form from './Feed/Form';\nimport { SegmentedControl } from 'segmented-control';\nimport ReactPaginate from 'react-paginate';\nimport RequestController from '../RequestController/RequestController';\nconst PAGE_LIMIT = 10;\n\nclass Sidebar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pageCount: null,\n            pageNum: 0\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        const prevUpperLeft = prevProps.upperLeft;\n        const upperLeft = this.props.upperLeft;\n\n        const prevBottomRight = prevProps.bottomRight;\n        const bottomRight = this.props.bottomRight;\n\n        const lengthsAreDiff = prevUpperLeft.length !== upperLeft.length || prevBottomRight.length !== bottomRight.length;\n\n        if (lengthsAreDiff ||\n            prevUpperLeft[0] !== upperLeft[0] ||\n            prevUpperLeft[1] !== upperLeft[1] ||\n            prevBottomRight[0] !== bottomRight[0] ||\n            prevBottomRight[1] !== bottomRight[1]) {\n\n            RequestController.getCount(upperLeft, bottomRight)\n                .then(res => { this.setState({ pageCount: Math.ceil(res.data.count / PAGE_LIMIT) }) })\n                .catch(err => console.log(err));\n\n            this.setState({ pageNum: 0 });\n        }\n    }\n\n    handlePageClick = (data) => {\n\n        RequestController.view(this.props.upperLeft, this.props.bottomRight, data.selected * PAGE_LIMIT, PAGE_LIMIT)\n            .then(res => { this.props.updateCurrentDataPoints(res.data.entries) })\n            .catch(err => console.log(err));\n        this.setState({ pageNum: data.selected });\n\n    }\n\n    updateMode = (newMode) => this.props.updateModeFunc(newMode)\n\n    render = () => {\n        return (\n            <div className=\"sidebar\">\n                <SegmentedControl\n                    name=\"modeToggle\"\n                    options={[\n                        { label: \"View\", value: \"view\", default: true },\n                        { label: \"Submit\", value: \"submit\" },\n                    ]}\n                    setValue={newMode => this.updateMode(newMode)}\n                    style={{\n                        width: '100%',\n                        height: '3em',\n                        fontSize: '0.9em',\n                        textAlign: 'center',\n                        color: '#2980b9'\n                    }} // purple400\n                />\n                {this.props.mode === 'view' ?\n                    <Feed className=\"feed\" elements={this.props.feed} onStoryClick={this.props.onStoryClick} selectedStory={this.props.selectedStory} /> :\n                    <Form\n                        updateLatLngFunc={this.props.updateLatLngFunc.bind(this)}\n                        curLatLng={this.props.curLatLng}></Form>\n                }\n\n                {this.props.mode === 'view' && this.state.pageCount && this.props.feed.length > 0 ?\n                    <div className=\"paginate-container\">\n                        <ReactPaginate\n                            forcePage={this.state.pageNum}\n                            previousLabel={'previous'}\n                            nextLabel={'next'}\n                            breakLabel={'...'}\n                            pageCount={this.state.pageCount}\n                            marginPagesDisplayed={1}\n                            pageRangeDisplayed={1}\n                            onPageChange={this.handlePageClick.bind(this)}\n                            containerClassName={'pagination'}\n                            subContainerClassName={'pages pagination'}\n                            activeClassName={'active'}\n                            breakClassName={'page-item'}\n                            breakLinkClassName={'page-link'}\n                            pageClassName={'page-item'}\n                            pageLinkClassName={'page-link'}\n                            previousClassName={'page-item'}\n                            previousLinkClassName={'page-link'}\n                            nextClassName={'page-item'}\n                            nextLinkClassName={'page-link'}\n                        />\n                    </div> :\n                    null}\n\n            </div>\n        )\n    }\n\n};\n\nexport default Sidebar;","import React from 'react';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport MapView from '../MapView/MapView';\nimport Sidebar from '../Sidebar/Sidebar';\n\nclass MainApp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: 'view',\n            curLatLng: {\n                lat: 0,\n                lng: 0\n            },\n            currentData: [],\n            boundingBox: {\n                upperLeft: [],\n                bottomRight: []\n            },\n            selectedStoryId: null\n        };\n    }\n\n    updateModeFunc(mode) {\n        this.setState({ mode })\n    }\n    updateLatLngFunc(curLatLng) {\n        this.setState({ curLatLng });\n    }\n\n    updateCurrentDataPoints(currentData) {\n        this.setState({ currentData });\n    }\n\n    updateBoundingBox(upperLeft, bottomRight) {\n        this.setState({\n            boundingBox:\n            {\n                upperLeft: upperLeft,\n                bottomRight: bottomRight\n            }\n        });\n    }\n\n    onStoryClick(storyId) {\n        this.setState({ selectedStoryId: storyId })\n    }\n\n    render() {\n\n        const curLatLng = [this.state.curLatLng.lat, this.state.curLatLng.lng];\n        return (\n            <Row>\n                <Col md={3}>\n                    <Sidebar\n                        curLatLng={curLatLng}\n                        mode={this.state.mode}\n                        updateLatLngFunc={this.updateLatLngFunc.bind(this)}\n                        updateModeFunc={this.updateModeFunc.bind(this)}\n                        updateCurrentDataPoints={this.updateCurrentDataPoints.bind(this)}\n                        feed={this.state.currentData}\n                        upperLeft={this.state.boundingBox.upperLeft}\n                        bottomRight={this.state.boundingBox.bottomRight}\n                        onStoryClick={this.onStoryClick.bind(this)}\n                        selectedStory={this.state.selectedStoryId}\n                    />\n                </Col>\n                <Col md={9}>\n                    <MapView\n                        mode={this.state.mode}\n                        updateLatLngFunc={this.updateLatLngFunc.bind(this)}\n                        updateCurrentDataPoints={this.updateCurrentDataPoints.bind(this)}\n                        updateBoundingBox={this.updateBoundingBox.bind(this)}\n                        markers={this.state.currentData}\n                        onStoryClick={this.onStoryClick.bind(this)}\n                        selectedStory={this.state.selectedStoryId}\n                    />\n                </Col>\n            </Row>\n        );\n    }\n}\nexport default MainApp;\n","import React from 'react';\nimport '../App.css';\n\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuList from '@material-ui/core/MenuList';\n\nconst DropdownMenu = (props) => {\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef(null);\n\n    const handleToggle = () => {\n        setOpen(prevOpen => !prevOpen);\n    };\n\n    const handleClose = event => {\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\n            return;\n        }\n        props.updatePageIdFunc(Number(event.target.id));\n\n        setOpen(false);\n    };\n\n    function handleListKeyDown(event) {\n        if (event.key === 'Tab') {\n            event.preventDefault();\n            setOpen(false);\n        }\n    }\n\n    // return focus to the button when we transitioned from !open -> open\n    const prevOpen = React.useRef(open);\n    React.useEffect(() => {\n        if (prevOpen.current === true && open === false) {\n            anchorRef.current.focus();\n        }\n\n        prevOpen.current = open;\n    }, [open]);\n\n    let SYS_MAX = 2147483638;\n\n    return (\n        <div>\n            <Button\n                ref={anchorRef}\n                aria-controls={open ? 'menu-list-grow' : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleToggle}\n            >\n                <MenuIcon />\n            </Button>\n\n            <Popper style={{ zIndex: SYS_MAX, marginRight: '2em' }} open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n                {({ TransitionProps, placement }) => (\n                    <Grow\n                        {...TransitionProps}\n                        style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                    >\n                        <Paper style={{ backgroundColor: 'white' }}>\n                            <ClickAwayListener onClickAway={handleClose}>\n                                <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                                    <MenuItem id={0} onClick={handleClose}>Main App</MenuItem>\n                                    <MenuItem id={1} onClick={handleClose}>About</MenuItem>\n                                </MenuList>\n                            </ClickAwayListener>\n                        </Paper>\n                    </Grow>\n                )}\n            </Popper>\n        </div>\n    );\n}\n\nexport default DropdownMenu;","import React from 'react';\nimport '../App.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport logo from '../Assets/logo.svg';\nimport DropdownMenu from './DropdownMenu';\n\nconst PlacesNavbar = (props) => {\n\n    return (\n        <div>\n            <Navbar bg=\"light\">\n                {/* Align left */}\n                <ul className=\"navbar-nav mr-auto\">\n                    <img style={{ height: '100%', width: '2em', marginRight: '0.5em' }} alt=\"logo\" src={logo} />\n                    <Navbar.Brand>places.io</Navbar.Brand>\n                </ul>\n\n                {/* Align right */}\n                <ul className=\"navbar-nav\">\n                    <DropdownMenu {...props} />\n                </ul>\n            </Navbar>\n        </div>\n    );\n}\n\nexport default PlacesNavbar;","import React from 'react';\nconst About = (props) => {\n    return (\n        <div>Places.io.  COMP 413 Fall 2019 Blue Team.  Feel free to add more here!</div>\n    );\n}\nexport default About;","import React from 'react';\nimport './App.css';\nimport MainApp from './MainApp/MainApp';\nimport PlacesNavbar from './Navbar/PlacesNavbar';\nimport About from './About/About';\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pageId: 0\n    }\n\n    //  0: map view\n    //  1: about page\n    //  extensible\n  }\n\n  updatePageId(pageId) {\n    this.setState({ pageId });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <PlacesNavbar updatePageIdFunc={this.updatePageId.bind(this)} />\n        {this.state.pageId === 0 ? <MainApp /> : <About />}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}